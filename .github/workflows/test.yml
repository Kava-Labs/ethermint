name: Tests
on:
  pull_request:
  push:
    branches:
      - main
      - release/**

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"

  test-unit-cover:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
          check-latest: true
      - uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.sol
            **/**.go
            go.mod
            go.sum
      - name: Test and Create Coverage Report
        run: |
          make test-unit-cover
        if: env.GIT_DIFF
      # Coverage at ./coverage.txt is not used for now

  test-importer:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
          check-latest: true
      - uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v6.1.2
        id: git_diff
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: test-importer
        run: |
          make test-import
        if: env.GIT_DIFF

  test-rpc:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
          check-latest: true
      - uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.sol
            **/**.go
            go.mod
            go.sum
      - name: Test rpc endpoint
        run: |
          make test-rpc
        if: env.GIT_DIFF

  integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.sol
            **/**.go
            go.mod
            go.sum
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
          check-latest: true

      - uses: nixbuild/nix-quick-install-action@v26
      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          # restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ runner.os }}-
          # collect garbage until Nix store size (in bytes) is at most this number
          # before trying to save a new cache
          gc-max-store-size-linux: 1073741824

      - name: Install deps
        run: poetry install
        working-directory: ./tests/integration_tests
      - name: Run integration tests
        run: make run-integration-tests-without-nix
        if: env.GIT_DIFF
      - name: "Tar debug files"
        if: failure()
        run: tar cfz debug_files.tar.gz -C /tmp/pytest-of-runner .
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: debug-files
          path: debug_files.tar.gz
          if-no-files-found: ignore
